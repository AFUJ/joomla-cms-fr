!(function (y) { "use strict"; y.subformRepeatable = function (t, e) { if (this.$container = y(t), this.$container.data("subformRepeatable")) return o; this.$container.data("subformRepeatable", o), this.options = y.extend({}, y.subformRepeatable.defaults, e), this.template = "", this.prepareTemplate(), this.$containerRows = this.options.rowsContainer ? this.$container.find(this.options.rowsContainer) : this.$container; var o = this; this.$container.on("click", this.options.btAdd, (function (t) { t.preventDefault(); var e = y(this).parents(o.options.repeatableElement); e.length || (e = null), o.addRow(e) })), this.$container.on("click", this.options.btRemove, (function (t) { t.preventDefault(); var e = y(this).parents(o.options.repeatableElement); o.removeRow(e) })), this.options.btMove && this.$containerRows.sortable({ items: this.options.repeatableElement, handle: this.options.btMove, tolerance: "pointer" }), this.$container.trigger("subform-ready") }, y.subformRepeatable.prototype.prepareTemplate = function () { if (this.options.rowTemplateSelector) this.template = y.trim(this.$container.find(this.options.rowTemplateSelector).last().html()) || ""; else { var t = this.$container.find(this.options.repeatableElement).get(0), e = y(t).clone(); try { this.clearScripts(e) } catch (t) { window.console && console.log(t) } this.template = e.prop("outerHTML") } }, y.subformRepeatable.prototype.addRow = function (t) { var e = this.$containerRows.find(this.options.repeatableElement).length; if (e >= this.options.maximum) return null; var o = y.parseHTML(this.template); t ? y(t).after(o) : this.$containerRows.append(o); var r = y(o); r.attr("data-new", "true"), this.fixUniqueAttributes(r, e); try { this.fixScripts(r) } catch (t) { window.console && console.log(t) } return this.$container.trigger("subform-row-add", r), r }, y.subformRepeatable.prototype.removeRow = function (t) { this.$containerRows.find(this.options.repeatableElement).length <= this.options.minimum || (this.$container.trigger("subform-row-remove", t), t.remove()) }, y.subformRepeatable.prototype.fixUniqueAttributes = function (t, e, o, r) { var a = void 0 === o ? t.attr("data-group") : o, i = void 0 === r ? t.attr("data-base-name") : r, n = void 0 === e ? 0 : e, s = i + n; t.attr("data-group", s); for (var l = t.find("[name]"), p = {}, c = 0, f = l.length; c < f; c++) { var h = y(l[c]), u = h.attr("name"), m = u.replace(/(\[\]$)/g, "").replace(/(\]\[)/g, "__").replace(/\[/g, "_").replace(/\]/g, ""), b = u.replace("[" + a + "][", "[" + s + "]["), d = m.replace(a, s), v = 0, g = m; "checkbox" === h.prop("type") && u.match(/\[\]$/) ? ((v = p[m] ? p[m].length : 0) || (h.closest("fieldset.checkboxes").attr("id", d), t.find('label[for="' + m + '"]').attr("for", d).attr("id", d + "-lbl")), g += v, d += v) : "radio" === h.prop("type") && ((v = p[m] ? p[m].length : 0) || (h.closest("fieldset.radio").attr("id", d), t.find('label[for="' + m + '"]').attr("for", d).attr("id", d + "-lbl")), g += v, d += v), p[m] ? p[m].push(!0) : p[m] = [!0], h.attr("name", b), h.attr("id", d), t.find('label[for="' + g + '"]').attr("for", d).attr("id", d + "-lbl") } for (var w = t.find(this.options.rowTemplateSelector), R = 0; R < w.length; R++) { var $ = y(y(w[R]).prop("content")); this.fixUniqueAttributes($, n, a, i) } }, y.subformRepeatable.prototype.clearScripts = function (t) { y.fn.chosen && t.find("select.chzn-done").each((function () { var t = y(this); t.next(".chzn-container").remove(), t.show().addClass("fix-chosen") })) }, y.subformRepeatable.prototype.fixScripts = function (t) { t.find('a[onclick*="jInsertFieldValue"]').each((function () { var t = y(this), e = t.siblings('input[type="text"]').attr("id"), o = t.prev(), r = o.attr("href"); t.attr("onclick", "jInsertFieldValue('', '" + e + "');return false;"), o.attr("href", r.replace(/&fieldid=(.+)&/, "&fieldid=" + e + "&")) })) }, y.subformRepeatable.defaults = { btAdd: ".group-add", btRemove: ".group-remove", btMove: ".group-move", minimum: 0, maximum: 10, repeatableElement: ".subform-repeatable-group", rowTemplateSelector: "template.subform-repeatable-template-section", rowsContainer: null }, y.fn.subformRepeatable = function () { return this.each((function () { var t = t || {}, e = y(this).data(); if (!e.subformRepeatable) { for (var o in e) e.hasOwnProperty(o) && (t[o] = e[o]); var r = new y.subformRepeatable(this, t); y(this).data("subformRepeatable", r) } })) }, y((function (o) { function t(t, e) { o(e || document).find("div.subform-repeatable").subformRepeatable() } t(), o(document).on("subform-row-add", t) })) })(jQuery);

