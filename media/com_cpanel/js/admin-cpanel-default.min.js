const debounce=(e,t=250,o)=>(...r)=>clearTimeout(o,o=setTimeout(e,t,...r));((e,t,o)=>{o.unpublishModule=e=>{const t=e.getAttribute("data-module-id");o.request({url:`index.php?option=com_modules&task=modules.unpublish&format=json&cid=${t}`,method:"POST",headers:{"Content-Type":"application/json"},onSuccess:()=>{const t=e.closest(".module-wrapper");t.parentNode.removeChild(t),o.renderMessages({message:[o.JText._("COM_CPANEL_UNPUBLISH_MODULE_SUCCESS")]})},onError:()=>{o.renderMessages({error:[o.JText._("COM_CPANEL_UNPUBLISH_MODULE_ERROR")]})}})};const r=()=>{const e=t.getElementById("content");if(e){[].slice.call(e.querySelectorAll(".unpublish-module")).forEach((e=>{e.addEventListener("click",(({target:e})=>o.unpublishModule(e)))}))}t.removeEventListener("DOMContentLoaded",r)};t.addEventListener("DOMContentLoaded",r);const n={$gridBox:null,resizeGridItem(e,t,o){const r=e.querySelector(".card");if(r){const n=r.getBoundingClientRect().height+o,s=Math.ceil(n/(t+o));e.style.gridRowEnd=`span ${s}`}},resizeAllGridItems(){const t=[].slice.call(n.$gridBox.children),o=e.getComputedStyle(n.$gridBox),r=parseInt(o.getPropertyValue("grid-auto-rows"),10)||0,s=parseInt(o.getPropertyValue("grid-row-gap"),10)||10;t.forEach((e=>{n.resizeGridItem(e,r,s)}))},initialise(){n.$gridBox=t.querySelector("#cpanel-modules .card-columns"),n.resizeAllGridItems(),e.addEventListener("resize",debounce(n.resizeAllGridItems,50))}};e.addEventListener("load",n.initialise)})(window,document,window.Joomla);